// -------------------------------------------------------------------------------------------------
// <copyright file="{{ TypeDrop.Name }}.cs" company="Starion Group S.A.">
//
//   Copyright 2022-2024 Starion Group S.A.
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
// </copyright>
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// --------THIS IS AN AUTOMATICALLY GENERATED FILE. ANY MANUAL CHANGES WILL BE OVERWRITTEN!--------
// ------------------------------------------------------------------------------------------------

namespace Kalliope.DTO
{
    using System;
    using System.Collections.Generic;

    using Kalliope.Common;

    /// <summary>
    /// A Data Transfer Object that represents a {{TypeDrop.Name}}
    /// </summary>
	{% if TypeDrop.Description != "" %}
    /// <remarks>
    /// {{ TypeDrop.Description }}
    /// </remarks>
	{% endif %}
	{% if TypeDrop.IsContained == true %}
	{% for containerAttribute in TypeDrop.ContainerAttributes %}
    [Container(typeName: "{{ containerAttribute.TypeName }}", propertyName: "{{ containerAttribute.PropertyName }}")]
	{% endfor %}
	{% endif %}
    public {% if TypeDrop.IsAbstract %}abstract {% endif %}partial class {{TypeDrop.Name}}{{TypeDrop.Generalization}}
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="{{ TypeDrop.Name }}"/> class.
        /// </summary>
        {% if TypeDrop.IsAbstract %}protected{% else %}public{% endif %} {{ TypeDrop.Name }}()
        {
			{% for property in TypeDrop.Properties %}
			{% if property.IsEnumerable == true and property.IsValueType %}
            this.{{ property.Name }} = new List<{{ property.TypeName }}>();
			{% elseif property.IsEnumerable == true and property.IsReferenceType %}
            this.{{ property.Name }} = new List<string>();
			{% elseif property.IsEnumeration == true and property.DefaultValue != '' %}
            this.{{ property.Name }} = {{property.TypeName}}.{{ property.DefaultValue }};
			{% endif %}
			{% endfor %}
        }
 
		{% if TypeDrop.IsContained == true and TypeDrop.IsContainedThroughSuperClass == false %}
        /// <summary>
        /// Gets or sets the unique identifier of the container
        /// </summary>
        public string Container {get; set;}
 
		{% endif %}

		{% for property in TypeDrop.Properties %}
		{% if property.IsDerived == true  %}
        /// <summary>
        /// Gets the derived {{ property.Name }}
        /// </summary>
        [Description("{{ property.DescriptionAttribute.Description }}")]
        [Property(name: "{{ property.PropertyAttribute.Name }}", aggregation: AggregationKind.{{ property.PropertyAttribute.Aggregation }}, multiplicity: "{{ property.PropertyAttribute.Multiplicity }}", typeKind: TypeKind.{{ property.PropertyAttribute.TypeKind }}, defaultValue: "{{ property.PropertyAttribute.DefaultValue }}", typeName: "{{ property.PropertyAttribute.TypeName }}", allowOverride: {{ property.PropertyAttribute.AllowOverride }}, isOverride: {{ property.PropertyAttribute.IsOverride }}, isDerived: {{ property.PropertyAttribute.IsDerived }})]
        {%- if property.HasCalculatedAttribute -%}
        [Calculated("{{ property.CalculatedDescription }}")]
		{%- endif -%}
        public {% if property.AllowOverride == true  %}virtual {% endif %}{% if property.IsOverride == true  %}override {% endif %}{{ property.TypeName }} {{ property.Name }} => this.Compute{{ property.Name }}();
 
		{% elseif property.IsEnumerable == true and property.IsValueType %}
        /// <summary>
        /// Gets or sets a list of {{ property.Name }}
        /// </summary>
        [Description("{{ property.DescriptionAttribute.Description }}")]
        [Property(name: "{{ property.PropertyAttribute.Name }}", aggregation: AggregationKind.{{ property.PropertyAttribute.Aggregation }}, multiplicity: "{{ property.PropertyAttribute.Multiplicity }}", typeKind: TypeKind.{{ property.PropertyAttribute.TypeKind }}, defaultValue: "{{ property.PropertyAttribute.DefaultValue }}", typeName: "{{ property.PropertyAttribute.TypeName }}", allowOverride: {{ property.PropertyAttribute.AllowOverride }}, isOverride: {{ property.PropertyAttribute.IsOverride }}, isDerived: {{ property.PropertyAttribute.IsDerived }})]
        {%- if property.HasCalculatedAttribute -%}
        [Calculated("{{ property.CalculatedDescription }}")]
		{%- endif -%}
        public {% if property.AllowOverride == true  %}virtual {% endif %}{% if property.IsOverride == true  %}override {% endif %}List<{{ property.TypeName }}> {{ property.Name }} { get; set; }
 
		{% elseif property.IsEnumerable == true and property.IsReferenceType %}
        /// <summary>
        /// Gets or sets a list unique identifiers of the {% if property.IsComposite == true %}contained {% else %}referenced {% endif %}<see cref="{{ property.TypeName }}"/> instances
        /// </summary>
        [Description("{{ property.DescriptionAttribute.Description }}")]
        [Property(name: "{{ property.PropertyAttribute.Name }}", aggregation: AggregationKind.{{ property.PropertyAttribute.Aggregation }}, multiplicity: "{{ property.PropertyAttribute.Multiplicity }}", typeKind: TypeKind.{{ property.PropertyAttribute.TypeKind }}, defaultValue: "{{ property.PropertyAttribute.DefaultValue }}", typeName: "{{ property.PropertyAttribute.TypeName }}", allowOverride: {{ property.PropertyAttribute.AllowOverride }}, isOverride: {{ property.PropertyAttribute.IsOverride }}, isDerived: {{ property.PropertyAttribute.IsDerived }})]
        {%- if property.HasCalculatedAttribute -%}
        [Calculated("{{ property.CalculatedDescription }}")]
		{%- endif -%}
        public {% if property.AllowOverride == true  %}virtual {% endif %}{% if property.IsOverride == true  %}override {% endif %}List<string> {{ property.Name }} { get; set; }
 
		{% elseif property.IsEnumerable != true and property.IsValueType %}
        /// <summary>
        /// Gets or sets a {{ property.Name }}
        /// </summary>
        [Description("{{ property.DescriptionAttribute.Description }}")]
        [Property(name: "{{ property.PropertyAttribute.Name }}", aggregation: AggregationKind.{{ property.PropertyAttribute.Aggregation }}, multiplicity: "{{ property.PropertyAttribute.Multiplicity }}", typeKind: TypeKind.{{ property.PropertyAttribute.TypeKind }}, defaultValue: "{{ property.PropertyAttribute.DefaultValue }}", typeName: "{{ property.PropertyAttribute.TypeName }}", allowOverride: {{ property.PropertyAttribute.AllowOverride }}, isOverride: {{ property.PropertyAttribute.IsOverride }}, isDerived: {{ property.PropertyAttribute.IsDerived }})]
        {%- if property.HasCalculatedAttribute -%}
        [Calculated("{{ property.CalculatedDescription }}")]
		{%- endif -%}
        public {% if property.AllowOverride == true  %}virtual {% endif %}{% if property.IsOverride == true  %}override {% endif %}{{ property.TypeName }} {{ property.Name }} { get; set; }
 
		{% elseif property.IsEnumerable != true and property.IsReferenceType %}
        /// <summary>
        /// Gets or sets the unique identifier of the {% if property.IsComposite == true %}contained {% else %}referenced {% endif %}<see cref="{{ property.TypeName }}"/>
        /// </summary>
        [Description("{{ property.DescriptionAttribute.Description }}")]
        [Property(name: "{{ property.PropertyAttribute.Name }}", aggregation: AggregationKind.{{ property.PropertyAttribute.Aggregation }}, multiplicity: "{{ property.PropertyAttribute.Multiplicity }}", typeKind: TypeKind.{{ property.PropertyAttribute.TypeKind }}, defaultValue: "{{ property.PropertyAttribute.DefaultValue }}", typeName: "{{ property.PropertyAttribute.TypeName }}", allowOverride: {{ property.PropertyAttribute.AllowOverride }}, isOverride: {{ property.PropertyAttribute.IsOverride }}, isDerived: {{ property.PropertyAttribute.IsDerived }})]
        {%- if property.HasCalculatedAttribute -%}
        [Calculated("{{ property.CalculatedDescription }}")]
		{%- endif -%}
        public {% if property.AllowOverride == true  %}virtual {% endif %}{% if property.IsOverride == true  %}override {% endif %}string {{ property.Name }} { get; set; }
 
		{% endif %}
		{% endfor %}
    }
}

// ------------------------------------------------------------------------------------------------
// --------THIS IS AN AUTOMATICALLY GENERATED FILE. ANY MANUAL CHANGES WILL BE OVERWRITTEN!--------
// ------------------------------------------------------------------------------------------------
 